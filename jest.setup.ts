import "@testing-library/jest-dom/jest-globals";
import "@testing-library/jest-dom";
import axios from "axios";

jest.mock("axios");

beforeAll(() => {
  jest.spyOn(axios, "get").mockImplementation((url) => {
    if (url.includes("/case")) {
      return Promise.resolve({
        data: [
          {
            updated_at: "2025-07-29T22:05:42.147921",
            created_at: "2025-07-29T22:05:42.147817",
            description: "Gerenciamento de produtos do e-commerce",
            name: "Cadastro de Produtos",
            case_id: 1,
          },
          {
            updated_at: "2025-07-29T22:05:42.154008",
            created_at: "2025-07-29T22:05:42.153903",
            description: "Fluxo de pedidos e pagamentos",
            name: "Processamento de Pedidos",
            case_id: 2,
          },
        ],
      });
    }
    if (url.includes("/task")) {
      return Promise.resolve({
        data: [
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.161148",
            description: "Mapear atributos necessários para produtos",
            team: "REQ",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.161300",
            name: "Levantamento de requisitos de catálogo",
            status: "OPEN",
            task_id: 1,
            code: "REQ-1",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.165769",
            description: "Definir dados obrigatórios para clientes",
            team: "REQ",
            nu: 2,
            updated_at: "2025-07-29T22:05:42.165854",
            name: "Requisitos de cadastro de clientes",
            status: "OPEN",
            task_id: 2,
            code: "REQ-2",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.168957",
            description: "Detalhar regras do carrinho",
            team: "REQ",
            nu: 3,
            updated_at: "2025-07-29T22:05:42.169038",
            name: "Requisitos de carrinho de compras",
            status: "OPEN",
            task_id: 3,
            code: "REQ-3",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.171938",
            description: "Especificar regras de descontos e cupons",
            team: "REQ",
            nu: 4,
            updated_at: "2025-07-29T22:05:42.172028",
            name: "Requisitos de promoções",
            status: "OPEN",
            task_id: 4,
            code: "REQ-4",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.176572",
            description: "Desenhar layout para exibição de produtos",
            team: "DES",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.176658",
            name: "Wireframe da página de produto",
            status: "OPEN",
            task_id: 5,
            code: "DES-1",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.183149",
            description: "Criar protótipo navegável do fluxo de compra",
            team: "DES",
            nu: 2,
            updated_at: "2025-07-29T22:05:42.183227",
            name: "Protótipo do checkout",
            status: "OPEN",
            task_id: 6,
            code: "DES-2",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.187766",
            description: "Interface para gestão de produtos e pedidos",
            team: "DES",
            nu: 3,
            updated_at: "2025-07-29T22:05:42.187874",
            name: "Design do painel administrativo",
            status: "OPEN",
            task_id: 7,
            code: "DES-3",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.192149",
            description: "Definir paleta de cores e tipografia",
            team: "DES",
            nu: 4,
            updated_at: "2025-07-29T22:05:42.192239",
            name: "Identidade visual do e-commerce",
            status: "OPEN",
            task_id: 8,
            code: "DES-4",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.196716",
            description: "CRUD de produtos com imagens",
            team: "DEV",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.196811",
            name: "Implementar cadastro de produtos",
            status: "OPEN",
            task_id: 9,
            code: "DEV-1",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.200326",
            description: "Endpoints para criação e consulta de pedidos",
            team: "DEV",
            nu: 2,
            updated_at: "2025-07-29T22:05:42.200416",
            name: "API de pedidos",
            status: "OPEN",
            task_id: 10,
            code: "DEV-2",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.204475",
            description: "Processar pagamentos online",
            team: "DEV",
            nu: 3,
            updated_at: "2025-07-29T22:05:42.204556",
            name: "Integração com gateway de pagamento",
            status: "OPEN",
            task_id: 11,
            code: "DEV-3",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.208743",
            description: "Permitir registro e autenticação de clientes",
            team: "DEV",
            nu: 4,
            updated_at: "2025-07-29T22:05:42.208829",
            name: "Cadastro de usuários",
            status: "OPEN",
            task_id: 12,
            code: "DEV-4",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.212586",
            description: "Cobrir regras de negócio com testes automatizados",
            team: "TES",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.212673",
            name: "Testes de unidade do backend",
            status: "OPEN",
            task_id: 13,
            code: "TES-1",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.216546",
            description: "Validar fluxo completo de compra",
            team: "TES",
            nu: 2,
            updated_at: "2025-07-29T22:05:42.216615",
            name: "Testes de integração do checkout",
            status: "OPEN",
            task_id: 14,
            code: "TES-2",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.220057",
            description: "Avaliar experiência do usuário no site",
            team: "TES",
            nu: 3,
            updated_at: "2025-07-29T22:05:42.220144",
            name: "Testes de usabilidade",
            status: "OPEN",
            task_id: 15,
            code: "TES-3",
          },
          {
            case_id: 2,
            created_at: "2025-07-29T22:05:42.223076",
            description: "Medir tempo de resposta do sistema",
            team: "TES",
            nu: 4,
            updated_at: "2025-07-29T22:05:42.223161",
            name: "Testes de performance",
            status: "OPEN",
            task_id: 16,
            code: "TES-4",
          },
        ],
      });
    }
    if (url.includes("?task_id")) {
      return Promise.resolve({
        data: [
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.161148",
            description: "Mapear atributos necessários para produtos",
            team: "REQ",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.161300",
            name: "Levantamento de requisitos de catálogo",
            status: "OPEN",
            task_id: 1,
            code: "REQ-1",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.171938",
            description: "Especificar regras de descontos e cupons",
            team: "REQ",
            nu: 4,
            updated_at: "2025-07-29T22:05:42.172028",
            name: "Requisitos de promoções",
            status: "OPEN",
            task_id: 4,
            code: "REQ-4",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.176572",
            description: "Desenhar layout para exibição de produtos",
            team: "DES",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.176658",
            name: "Wireframe da página de produto",
            status: "OPEN",
            task_id: 5,
            code: "DES-1",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.187766",
            description: "Interface para gestão de produtos e pedidos",
            team: "DES",
            nu: 3,
            updated_at: "2025-07-29T22:05:42.187874",
            name: "Design do painel administrativo",
            status: "OPEN",
            task_id: 7,
            code: "DES-3",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.192149",
            description: "Definir paleta de cores e tipografia",
            team: "DES",
            nu: 4,
            updated_at: "2025-07-29T22:05:42.192239",
            name: "Identidade visual do e-commerce",
            status: "OPEN",
            task_id: 8,
            code: "DES-4",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.196716",
            description: "CRUD de produtos com imagens",
            team: "DEV",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.196811",
            name: "Implementar cadastro de produtos",
            status: "OPEN",
            task_id: 9,
            code: "DEV-1",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.212586",
            description: "Cobrir regras de negócio com testes automatizados",
            team: "TES",
            nu: 1,
            updated_at: "2025-07-29T22:05:42.212673",
            name: "Testes de unidade do backend",
            status: "OPEN",
            task_id: 13,
            code: "TES-1",
          },
          {
            case_id: 1,
            created_at: "2025-07-29T22:05:42.220057",
            description: "Avaliar experiência do usuário no site",
            team: "TES",
            nu: 3,
            updated_at: "2025-07-29T22:05:42.220144",
            name: "Testes de usabilidade",
            status: "OPEN",
            task_id: 15,
            code: "TES-3",
          },
        ],
      });
    }
    if (url.includes("/task-with-deps")) {
      return Promise.resolve({
        data: [
          {
            created_at: "2025-07-29T22:05:42.161148",
            updated_at: "2025-07-29T22:05:42.161300",
            case_id: 1,
            name: "Levantamento de requisitos de catálogo",
            description: "Mapear atributos necessários para produtos",
            status: "OPEN",
            team: "REQ",
            task_id: 1,
            nu: 1,
            dependencies: [],
            code: "REQ-1",
          },
          {
            created_at: "2025-07-29T22:05:42.165769",
            updated_at: "2025-07-29T22:05:42.165854",
            case_id: 2,
            name: "Requisitos de cadastro de clientes",
            description: "Definir dados obrigatórios para clientes",
            status: "OPEN",
            team: "REQ",
            task_id: 2,
            nu: 2,
            dependencies: [],
            code: "REQ-2",
          },
          {
            created_at: "2025-07-29T22:05:42.168957",
            updated_at: "2025-07-29T22:05:42.169038",
            case_id: 2,
            name: "Requisitos de carrinho de compras",
            description: "Detalhar regras do carrinho",
            status: "OPEN",
            team: "REQ",
            task_id: 3,
            nu: 3,
            dependencies: [],
            code: "REQ-3",
          },
          {
            created_at: "2025-07-29T22:05:42.171938",
            updated_at: "2025-07-29T22:05:42.172028",
            case_id: 1,
            name: "Requisitos de promoções",
            description: "Especificar regras de descontos e cupons",
            status: "OPEN",
            team: "REQ",
            task_id: 4,
            nu: 4,
            dependencies: [],
            code: "REQ-4",
          },
        ],
      });
    }
    return Promise.reject(new Error("Not Found"));
  });
});

beforeEach(() => {
  jest.clearAllMocks();
});
